{"version":3,"sources":["lib.js","index.js"],"names":["getRandomId","Math","random","toString","substr","diceIds","rollDice","dice","floor","makeTurnElements","id","diceNumber","status","diceStatus","forChoose","chosen","turnRoll","state","numOfDices","turnResults","i","push","pool","updateTurnCounter","currTurnRef","rerollCounter","rerollOne","rerollTwo","renderPool","addEventListeners","clearState","currentSelectedOne","currentSelectedTwo","turnTotalSum","getTurnElements","num","turnNumbersEl","finalElements","filter","n","simpleSumElements","turnElRemainingSum","reduce","total","val","console","log","updateResults","simpleSumController","map","d","simpleSumEvent","document","getElementsByClassName","filterEl","onclick","reRollButton","getElementById","selectDiceElements","changeCellStatus","arrposition","index","innerHTML","rerollOneController","rerollTwoController","fillTurnElements","numOfAddDices","length","main"],"mappings":";;ACAA;;AAEA,IAAMoE,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMnD,KAAK,GAAG;AACZK,IAAAA,IAAI,EAAE,2BAAiB,CAAjB,CADM;AAEZI,IAAAA,SAAS,EAAE,EAFC;AAGZC,IAAAA,SAAS,EAAE,EAHC;AAIZI,IAAAA,kBAAkB,EAAE,EAJR;AAKZC,IAAAA,kBAAkB,EAAE,EALR;AAMZK,IAAAA,aAAa,EAAE,EANH;AAOZJ,IAAAA,YAAY,EAAE,CAPF;AAQZR,IAAAA,aAAa,EAAE;AARH,GAAd;AAUA,qBAASR,KAAT,EAAgB,CAAhB;AACA4B,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC7B,KAAK,CAACK,IAAtC;AACD,CAbD;;AAeA8C,ADjBO,ICiBH,ADjBSpE,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,MAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAZ;AAAA,CAApB;;;AAEA,IAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAhB;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,MAAMC,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,MAAL,KAAgB,CAA3B,IAAgC,CAA7C;AACA,SAAOK,IAAP;AACD,CAHM;;;;AAKA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACrCC,IAAAA,EAAE,EAAEV,WAAW,EADsB;AAErCW,IAAAA,UAAU,EAAEL,QAAQ,EAFiB;AAGrCM,IAAAA,MAAM,EAAEC,UAAU,CAACC;AAHkB,GAAP;AAAA,CAAzB;;;AAMA,IAAMD,UAAU,GAAG;AACxBC,EAAAA,SAAS,EAAE,YADa;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAAnB;;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,UAAR,EAAuB;AAC7C,MAAMC,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACnCD,IAAAA,WAAW,CAACE,IAAZ,CAAiBZ,gBAAgB,EAAjC;AACD;;AACDQ,EAAAA,KAAK,CAACK,IAAN,GAAaH,WAAb;AAEAI,EAAAA,iBAAiB,CAACN,KAAD,CAAjB;AACD,CARM;;;;AAUA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACN,KAAD,EAAW;AAC1C,MAAIO,WAAJ;;AACA,MAAIP,KAAK,CAACQ,aAAN,KAAwB,CAA5B,EAA+B;AAC7BD,IAAAA,WAAW,GAAGP,KAAK,CAACK,IAApB;AACD,GAFD,MAEO,IAAIL,KAAK,CAACQ,aAAN,KAAwB,CAA5B,EAA+B;AACpCD,IAAAA,WAAW,GAAGP,KAAK,CAACS,SAApB;AACD,GAFM,MAEA,IAAIT,KAAK,CAACQ,aAAN,KAAwB,CAA5B,EAA+B;AACpCD,IAAAA,WAAW,GAAGP,KAAK,CAACU,SAApB;AACD;;AAEDC,EAAAA,UAAU,CAACJ,WAAD,CAAV;AACAK,EAAAA,iBAAiB,CAACZ,KAAD,EAAQO,WAAR,CAAjB;AACD,CAZM;;;;AAcA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACb,KAAD,EAAW;AACnCA,EAAAA,KAAK,CAACQ,aAAN,GAAsB,CAAtB;AACAR,EAAAA,KAAK,CAACS,SAAN,GAAkB,EAAlB;AACAT,EAAAA,KAAK,CAACU,SAAN,GAAkB,EAAlB;AACAV,EAAAA,KAAK,CAACc,kBAAN,GAA2B,EAA3B;AACAd,EAAAA,KAAK,CAACe,kBAAN,GAA2B,EAA3B;AACAf,EAAAA,KAAK,CAACgB,YAAN,GAAqB,CAArB;AACD,CAPM;;;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACjB,KAAD,EAAQkB,GAAR,EAAaC,aAAb,EAA+B;AAC5DnB,EAAAA,KAAK,CAACoB,aAAN,GAAsBD,aAAa,CAACE,MAAd,CAAqB,UAACC,CAAD;AAAA,WAAOA,CAAC,KAAKJ,GAAb;AAAA,GAArB,CAAtB;AACD,CAFM;;;;AAIA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACvB,KAAD,EAAQkB,GAAR,EAAgB;AAC/C,MAAMM,kBAAkB,GAAGxB,KAAK,CAACoB,aAAN,CAAoBK,MAApB,CACzB,UAACC,KAAD,EAAQC,GAAR;AAAA,WAAgBD,KAAK,GAAGC,GAAxB;AAAA,GADyB,EAEzB,CAFyB,CAA3B;AAIA3B,EAAAA,KAAK,CAACgB,YAAN,GAAqBQ,kBAArB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAK,CAACgB,YAAlB;AAEAc,EAAAA,aAAa,CAAC9B,KAAD,EAAQkB,GAAR,CAAb;AACD,CATM;;;;AAWA,IAAMN,iBAAiB,GAAG,SAApBA,iBAAoB,CAACZ,KAAD,EAAQO,WAAR,EAAwB;AACvD;AACA,MAAMwB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACb,GAAD,EAAS;AACnCD,IAAAA,eAAe,CACbjB,KADa,EAEbkB,GAFa,EAGbX,WAAW,CAACyB,GAAZ,CAAgB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACvC,UAAT;AAAA,KAAhB,CAHa,CAAf;AAKA6B,IAAAA,iBAAiB,CAACvB,KAAD,EAAQkB,GAAR,CAAjB;AACD,GAPD;;AASA,MAAMgB,cAAc,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,CAAvB;;AAEA,qBAAIF,cAAJ,EAAoBF,GAApB,CACE,UAACK,QAAD;AAAA,WAAeA,QAAQ,CAACC,OAAT,GAAmB;AAAA,aAAMP,mBAAmB,CAAC,CAACM,QAAQ,CAAC5C,EAAX,CAAzB;AAAA,KAAlC;AAAA,GADF;;AAIA,MAAM8C,YAAY,GAAGJ,QAAQ,CAACK,cAAT,CAAwB,gBAAxB,CAArB;;AACAD,EAAAA,YAAY,CAACD,OAAb,GAAuB,YAAM;AAC3BG,IAAAA,kBAAkB,CAChBzC,KADgB,EAEhBO,WAAW,CAACyB,GAAZ,CAAgB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACvC,UAAT;AAAA,KAAhB,CAFgB,CAAlB;AAIAY,IAAAA,iBAAiB,CACfN,KADe,EAEfO,WAAW,CAACyB,GAAZ,CAAgB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACvC,UAAT;AAAA,KAAhB,CAFe,CAAjB;AAID,GATD;;AAWA,MAAMgD,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACnC,WAAD,EAAcoC,WAAd,EAA8B;AACrD,QAAIpC,WAAW,CAACoC,WAAD,CAAX,CAAyBhD,MAAzB,KAAoCC,UAAU,CAACC,SAAnD,EAA8D;AAC5DU,MAAAA,WAAW,CAACoC,WAAD,CAAX,CAAyBhD,MAAzB,GAAkCC,UAAU,CAACE,MAA7C;AACA8B,MAAAA,OAAO,CAACC,GAAR,aAAiBtB,WAAW,CAACoC,WAAD,CAAX,CAAyBhD,MAA1C;AACD,KAHD,MAGO;AACLY,MAAAA,WAAW,CAACoC,WAAD,CAAX,CAAyBhD,MAAzB,GAAkCC,UAAU,CAACC,SAA7C;AACA+B,MAAAA,OAAO,CAACC,GAAR,aAAiBtB,WAAW,CAACoC,WAAD,CAAX,CAAyBhD,MAA1C;AACD;AACF,GARD;;AAUA,MAAMP,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAhB;AACAA,EAAAA,OAAO,CAAC4C,GAAR,CAAY,UAACvC,EAAD,EAAKmD,KAAL,EAAe;AACzBT,IAAAA,QAAQ,CAACK,cAAT,gBAAgC/C,EAAhC,cAA6C6C,OAA7C,GAAuD;AAAA,aACrDI,gBAAgB,CAACnC,WAAD,EAAcqC,KAAd,CADqC;AAAA,KAAvD;AAED,GAHD;AAID,CA5CM;;;;AA8CA,IAAMd,aAAa,GAAG,SAAhBA,aAAgB,CAAC9B,KAAD,EAAQkB,GAAR,EAAgB;AAC3CiB,EAAAA,QAAQ,CAACK,cAAT,WACKtB,GADL,cAEE2B,SAFF,oBAEwB7C,KAAK,CAACgB,YAF9B;AAGAH,EAAAA,UAAU,CAACb,KAAD,CAAV;AACAD,EAAAA,QAAQ,CAACC,KAAD,EAAQ,CAAR,CAAR;AACD,CANM;;;AAQPZ,OAAO,CAAC4C,GAAR,CAAY,UAACvC,EAAD,EAAKmD,KAAL,EAAe;AACzBT,EAAAA,QAAQ,CAACK,cAAT,gBAAgC/C,EAAhC,cAA6C6C,OAA7C,GAAuD;AAAA,WACrDI,gBAAgB,CAACnC,WAAD,EAAcqC,KAAd,CADqC;AAAA,GAAvD;AAED,CAHD;;AAKO,IAAMjC,UAAU,GAAG,SAAbA,UAAa,CAACJ,WAAD,EAAiB;AACzCnB,EAAAA,OAAO,CAAC4C,GAAR,CAAY,UAACvC,EAAD,EAAKmD,KAAL,EAAe;AACzBT,IAAAA,QAAQ,CAACK,cAAT,mBACa/C,EADb,GAEEoD,SAFF,mBAEuBtC,WAAW,CAACqC,KAAD,CAAX,CAAmBlD,UAF1C;AAGD,GAJD;AAKD,CANM;;;;AAQA,IAAM+C,kBAAkB,GAAG,SAArBA,kBAAqB,CAACzC,KAAD,EAAQmB,aAAR,EAA0B;AAC1D,MAAInB,KAAK,CAACQ,aAAN,KAAwB,CAA5B,EAA+B;AAC7BsC,IAAAA,mBAAmB,CAAC9C,KAAD,EAAQmB,aAAR,CAAnB;AACAnB,IAAAA,KAAK,CAACQ,aAAN;AACD,GAHD,MAGO,IAAIR,KAAK,CAACQ,aAAN,KAAwB,CAA5B,EAA+B;AACpCuC,IAAAA,mBAAmB,CAAC/C,KAAD,EAAQmB,aAAR,CAAnB;AACAnB,IAAAA,KAAK,CAACQ,aAAN;AACD;AACF,CARM;;;;AAUA,IAAMsC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAC9C,KAAD,EAAQmB,aAAR,EAA0B;AAC3D/B,EAAAA,OAAO,CAAC4C,GAAR,CAAY,UAACvC,EAAD,EAAKmD,KAAL,EAAe;AACzB,QAAI5C,KAAK,CAACK,IAAN,CAAWuC,KAAX,EAAkBjD,MAAlB,KAA6BC,UAAU,CAACE,MAA5C,EAAoD;AAClDE,MAAAA,KAAK,CAACc,kBAAN,CAAyBV,IAAzB,CAA8BJ,KAAK,CAACK,IAAN,CAAWuC,KAAX,CAA9B;AACD;AACF,GAJD;AAMAI,EAAAA,gBAAgB,CAAChD,KAAD,EAAQmB,aAAR,CAAhB;AACD,CARM;;;;AAUA,IAAM4B,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAC/C,KAAD,EAAQmB,aAAR,EAA0B;AAC3D/B,EAAAA,OAAO,CAAC4C,GAAR,CAAY,UAACvC,EAAD,EAAKmD,KAAL,EAAe;AACzB,QAAI5C,KAAK,CAACS,SAAN,CAAgBmC,KAAhB,EAAuBjD,MAAvB,KAAkCC,UAAU,CAACE,MAAjD,EAAyD;AACvDE,MAAAA,KAAK,CAACe,kBAAN,CAAyBX,IAAzB,CAA8BJ,KAAK,CAACS,SAAN,CAAgBmC,KAAhB,CAA9B;AACD;AACF,GAJD;AAMAI,EAAAA,gBAAgB,CAAChD,KAAD,EAAQmB,aAAR,CAAhB;AACD,CARM;;;;AAUA,IAAM6B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAChD,KAAD,EAAQmB,aAAR,EAA0B;AACxD,MAAI8B,aAAJ;;AACA,MAAIjD,KAAK,CAACQ,aAAN,KAAwB,CAA5B,EAA+B;AAC7ByC,IAAAA,aAAa,GAAG,IAAIjD,KAAK,CAACc,kBAAN,CAAyBoC,MAA7C;AACAnD,IAAAA,QAAQ,CAACC,KAAD,EAAQ,CAAR,CAAR;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8C,aAApB,EAAmC9C,CAAC,EAApC,EAAwC;AACtCH,MAAAA,KAAK,CAACS,SAAN,CAAgBL,IAAhB,CAAqBJ,KAAK,CAACK,IAAN,CAAWF,CAAX,CAArB;AACD;;AAED,SAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGH,KAAK,CAACc,kBAAN,CAAyBoC,MAA7C,EAAqD/C,EAAC,EAAtD,EAA0D;AACxDH,MAAAA,KAAK,CAACS,SAAN,CAAgBL,IAAhB,CAAqBJ,KAAK,CAACc,kBAAN,CAAyBX,EAAzB,CAArB;AACD;;AACDG,IAAAA,iBAAiB,CAACN,KAAD,EAAQmB,aAAR,CAAjB;AACD,GAXD,MAWO,IAAInB,KAAK,CAACQ,aAAN,KAAwB,CAA5B,EAA+B;AACpCyC,IAAAA,aAAa,GAAG,IAAIjD,KAAK,CAACe,kBAAN,CAAyBmC,MAA7C;AACAnD,IAAAA,QAAQ,CAACC,KAAD,EAAQ,CAAR,CAAR;;AACA,SAAK,IAAIG,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG8C,aAApB,EAAmC9C,GAAC,EAApC,EAAwC;AACtCH,MAAAA,KAAK,CAACU,SAAN,CAAgBN,IAAhB,CAAqBJ,KAAK,CAACK,IAAN,CAAWF,GAAX,CAArB;AACD;;AAED,SAAK,IAAIA,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGH,KAAK,CAACe,kBAAN,CAAyBmC,MAA7C,EAAqD/C,GAAC,EAAtD,EAA0D;AACxDH,MAAAA,KAAK,CAACU,SAAN,CAAgBN,IAAhB,CAAqBJ,KAAK,CAACe,kBAAN,CAAyBZ,GAAzB,CAArB;AACD;;AACDG,IAAAA,iBAAiB,CAACN,KAAD,EAAQmB,aAAR,CAAjB;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,CA3BM","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["export const getRandomId = () => \"_\" + Math.random().toString(26).substr(2, 9);\r\n\r\nexport const diceIds = [\"a\", \"b\", \"c\", \"d\", \"e\"];\r\n\r\nexport const rollDice = () => {\r\n  const dice = Math.floor(Math.random() * 6) + 1;\r\n  return dice;\r\n};\r\n\r\nexport const makeTurnElements = () => ({\r\n  id: getRandomId(),\r\n  diceNumber: rollDice(),\r\n  status: diceStatus.forChoose,\r\n});\r\n\r\nexport const diceStatus = {\r\n  forChoose: \"for_choose\",\r\n  chosen: \"chosen\",\r\n};\r\n\r\nexport const turnRoll = (state, numOfDices) => {\r\n  const turnResults = [];\r\n  for (let i = 0; i < numOfDices; i++) {\r\n    turnResults.push(makeTurnElements());\r\n  }\r\n  state.pool = turnResults;\r\n\r\n  updateTurnCounter(state);\r\n};\r\n\r\nexport const updateTurnCounter = (state) => {\r\n  let currTurnRef;\r\n  if (state.rerollCounter === 1) {\r\n    currTurnRef = state.pool;\r\n  } else if (state.rerollCounter === 2) {\r\n    currTurnRef = state.rerollOne;\r\n  } else if (state.rerollCounter === 3) {\r\n    currTurnRef = state.rerollTwo;\r\n  }\r\n\r\n  renderPool(currTurnRef);\r\n  addEventListeners(state, currTurnRef);\r\n};\r\n\r\nexport const clearState = (state) => {\r\n  state.rerollCounter = 1;\r\n  state.rerollOne = [];\r\n  state.rerollTwo = [];\r\n  state.currentSelectedOne = [];\r\n  state.currentSelectedTwo = [];\r\n  state.turnTotalSum = 0;\r\n};\r\n\r\nexport const getTurnElements = (state, num, turnNumbersEl) => {\r\n  state.finalElements = turnNumbersEl.filter((n) => n === num);\r\n};\r\n\r\nexport const simpleSumElements = (state, num) => {\r\n  const turnElRemainingSum = state.finalElements.reduce(\r\n    (total, val) => total + val,\r\n    0\r\n  );\r\n  state.turnTotalSum = turnElRemainingSum;\r\n  console.log(state.turnTotalSum);\r\n\r\n  updateResults(state, num);\r\n};\r\n\r\nexport const addEventListeners = (state, currTurnRef) => {\r\n  //\r\n  const simpleSumController = (num) => {\r\n    getTurnElements(\r\n      state,\r\n      num,\r\n      currTurnRef.map((d) => d.diceNumber)\r\n    );\r\n    simpleSumElements(state, num);\r\n  };\r\n\r\n  const simpleSumEvent = document.getElementsByClassName(\"actionButton\");\r\n\r\n  [...simpleSumEvent].map(\r\n    (filterEl) => (filterEl.onclick = () => simpleSumController(+filterEl.id))\r\n  );\r\n\r\n  const reRollButton = document.getElementById(\"re_roll_button\");\r\n  reRollButton.onclick = () => {\r\n    selectDiceElements(\r\n      state,\r\n      currTurnRef.map((d) => d.diceNumber)\r\n    );\r\n    updateTurnCounter(\r\n      state,\r\n      currTurnRef.map((d) => d.diceNumber)\r\n    );\r\n  };\r\n\r\n  const changeCellStatus = (currTurnRef, arrposition) => {\r\n    if (currTurnRef[arrposition].status === diceStatus.forChoose) {\r\n      currTurnRef[arrposition].status = diceStatus.chosen;\r\n      console.log(`A ${currTurnRef[arrposition].status}`);\r\n    } else {\r\n      currTurnRef[arrposition].status = diceStatus.forChoose;\r\n      console.log(`A ${currTurnRef[arrposition].status}`);\r\n    }\r\n  };\r\n\r\n  const diceIds = [\"a\", \"b\", \"c\", \"d\", \"e\"];\r\n  diceIds.map((id, index) => {\r\n    document.getElementById(`dice_${id}_button`).onclick = () =>\r\n      changeCellStatus(currTurnRef, index);\r\n  });\r\n};\r\n\r\nexport const updateResults = (state, num) => {\r\n  document.getElementById(\r\n    `${num}__total`\r\n  ).innerHTML = `Total: ${state.turnTotalSum}`;\r\n  clearState(state);\r\n  turnRoll(state, 5);\r\n};\r\n\r\ndiceIds.map((id, index) => {\r\n  document.getElementById(`dice_${id}_button`).onclick = () =>\r\n    changeCellStatus(currTurnRef, index);\r\n});\r\n\r\nexport const renderPool = (currTurnRef) => {\r\n  diceIds.map((id, index) => {\r\n    document.getElementById(\r\n      `ui_dice_${id}`\r\n    ).innerHTML = `Dice: ${currTurnRef[index].diceNumber}`;\r\n  });\r\n};\r\n\r\nexport const selectDiceElements = (state, turnNumbersEl) => {\r\n  if (state.rerollCounter === 1) {\r\n    rerollOneController(state, turnNumbersEl);\r\n    state.rerollCounter++;\r\n  } else if (state.rerollCounter === 2) {\r\n    rerollTwoController(state, turnNumbersEl);\r\n    state.rerollCounter++;\r\n  }\r\n};\r\n\r\nexport const rerollOneController = (state, turnNumbersEl) => {\r\n  diceIds.map((id, index) => {\r\n    if (state.pool[index].status === diceStatus.chosen) {\r\n      state.currentSelectedOne.push(state.pool[index]);\r\n    }\r\n  });\r\n\r\n  fillTurnElements(state, turnNumbersEl);\r\n};\r\n\r\nexport const rerollTwoController = (state, turnNumbersEl) => {\r\n  diceIds.map((id, index) => {\r\n    if (state.rerollOne[index].status === diceStatus.chosen) {\r\n      state.currentSelectedTwo.push(state.rerollOne[index]);\r\n    }\r\n  });\r\n\r\n  fillTurnElements(state, turnNumbersEl);\r\n};\r\n\r\nexport const fillTurnElements = (state, turnNumbersEl) => {\r\n  let numOfAddDices;\r\n  if (state.rerollCounter === 1) {\r\n    numOfAddDices = 5 - state.currentSelectedOne.length;\r\n    turnRoll(state, 5);\r\n    for (let i = 0; i < numOfAddDices; i++) {\r\n      state.rerollOne.push(state.pool[i]);\r\n    }\r\n\r\n    for (let i = 0; i < state.currentSelectedOne.length; i++) {\r\n      state.rerollOne.push(state.currentSelectedOne[i]);\r\n    }\r\n    updateTurnCounter(state, turnNumbersEl);\r\n  } else if (state.rerollCounter === 2) {\r\n    numOfAddDices = 5 - state.currentSelectedTwo.length;\r\n    turnRoll(state, 5);\r\n    for (let i = 0; i < numOfAddDices; i++) {\r\n      state.rerollTwo.push(state.pool[i]);\r\n    }\r\n\r\n    for (let i = 0; i < state.currentSelectedTwo.length; i++) {\r\n      state.rerollTwo.push(state.currentSelectedTwo[i]);\r\n    }\r\n    updateTurnCounter(state, turnNumbersEl);\r\n\r\n    console.log(\"final\");\r\n  }\r\n};\r\n","import { makeTurnElements, turnRoll } from \"./lib\";\r\n\r\nconst main = () => {\r\n  const state = {\r\n    pool: makeTurnElements(5),\r\n    rerollOne: [],\r\n    rerollTwo: [],\r\n    currentSelectedOne: [],\r\n    currentSelectedTwo: [],\r\n    finalElements: [],\r\n    turnTotalSum: 0,\r\n    rerollCounter: 1,\r\n  };\r\n  turnRoll(state, 5);\r\n  console.log(\"first roll pool \", state.pool);\r\n};\r\n\r\nmain();\r\n"]}